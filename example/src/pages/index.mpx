<template>
  <view>page: {{ page }} </view>
  <view>status: {{ list.status.value }}</view>
  <view>fetchStatus: {{ list.fetchStatus.value }}</view>
  <view>isFetching: {{ list.isFetching.value }}</view>
  <view>isFetched: {{ list.isFetched.value }}</view>
  <view>isSuccess: {{ list.isSuccess.value }}</view>
  <view>isRefetching: {{ list.isRefetching.value }}</view>
  <view>isInitialLoading: {{ list.isInitialLoading.value }}</view>
  <view>isPaused: {{ list.isPaused.value }}</view>
  <view>isError: {{ list.isError.value }}</view>
  <view>error: {{ list.error.value }}</view>
  <view>failureReason: {{ list.failureReason.value }}</view>
  <view>value: {{ list.data.value }}</view>
  <button bindtap="refetch">refech</button>
  <button bindtap="changePage">changePage</button>
  <button bindtap="makeError">makeError</button>
</template>

<script lang="ts">
import { createPage, ref, watchEffect } from '@mpxjs/core'
import { useList } from './useList'

createPage({
  setup() {
    const page = ref(1)
    const list = useList(page)
    watchEffect(() => {
      if (list.isFetched.value) {
        console.log(list.data.value)
      }
      console.log(list.error.value)
      console.log(list.failureReason.value)
    })
    const refetch = () => {
      list.refetch()
    }
    const changePage = () => {
      page.value++
    }
    const makeError = () => {
      page.value = -1
    }
    return {
      list,
      refetch,
      changePage,
      makeError,
      page
    }
  }
})
</script>

<script type="application/json">
{
  "usingComponents": {
    "list": "../components/list"
  }
}
</script>
